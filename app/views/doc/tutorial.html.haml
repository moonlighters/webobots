- title "Курс молодого бойца"

- actions_for_doc

%span{:style => "color: red; font-size: 1.3em; border-bottom: dashed 2px red"}
  ! TODO:
  %ol
    %li поправить упоминание навигации в туториале
    %li спеки на контроллер

.docs
  %h3 С чего начать?
  Первым делом
  = link_to "зарегистрируйся", signup_path
  на нашем сайте. После этого ты сможешь
  = link_to "войти", login_path
  на сайт под своим именем, чтобы потом, когда ты будешь сохранять программы для вебобота или оставлять комментарии, было ясно, кто это делает.
  %h3 Сделано! Ну и где мой вебобот?
  Подожди, давай делать всё по-порядку. Вебоботы появляются на люди только на ринге, где они сражаются. Но пока в вебобота не прошита программа, он ничего не может делать, и будет беспомощно стоять под атакой противника. Ты ведь не хочешь этого? Тогда давай напишем первую программу для вебобота, для начала простенькую.
  %h3 Куда зайти, чтобы написать программу?
  Возможно, тебя смутило, что нигде на сайте нет ссылки «Программы». Это слово имеет слишком много смыслов, поэтому программы для наших вебоботов мы называем <i>прошивками</i> — компьютерщики любят пользоваться своим жаргоном... Так что смело нажимай на ссылку «Прошивки» вверху страницы, затем — «Создать».
  %h3 Ой, сколько много настроек!
  Пока не заморачивайся насчёт них, со временем ты обязательно со всем разберёшься. Сейчас просто придумай название, введи его и сконцентрируйся на главном большом поле ввода — «Исходный код» — куда и нужно написать программу-прошивку для своего вебобота.
  %h3 Не представляю, с чего начать...
  Чтобы получить полное и подробное представление о языке, с которым тебе предстоит работать, можешь почитать
  = link_to("подробное руководство", waffle_language_doc_path) + "."
  Но проще всего дочитать этот текст до конца, чтобы понять основную суть на простых примерах, а потом уже обратиться к
  = link_to "руководствy", waffle_language_doc_path
  за деталями.
  %br
  %br
  Итак, давай для начала прикажем вебоботу перестать уныло стоять на месте — потому что изначально он именно этим и занимается — и начать разгоняться. Именно начать разгоняться, потому что двигатель у робота хоть и мощный, но не реактивный, и он не может моментально развить желаемую скорость. Впрочем, не будем вдаваться в детали. Введи в поле «Исходный код» эту строчку:
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:simple]};
  С точки зрения языка здесь происходит вызов стандартной функции <div class='inline_code'>set_speed</div>, что в переводе на русский язык означает «установить скорость», а в качестве параметра передаётся число 100 — скорость, до которой вебобот должен разогнаться.
  %h3 И как мне в этом убедиться?
  Для этого нужно сохранить прошивку (кнопку ты найдёшь внизу страницы) и начать какой-либо матч с её участием.
  %h3 Но ведь любой другой робот с лёгкостью побьёт такую слабую прошивку?
  Да, это так. Однако необходимость немного поэкспериментировать со своей прошивкой, прежде чем выставлять её на бой, возникает постоянно, так что мы это предусмотрели. Во-первых, ты можешь запретить сражения с этой прошивкой до тех пор, пока ты не посчитаешь её готовой дать отпор противнику. Для этого зайди на страницу прошивки, куда легко попасть со списка своих прошивок. Нажимай «Редактировать» — и ты снова увидишь форму, которую ты заполнял при создании прошивки. Но сейчас ты не создаёшь новую прошивку, а обновляешь уже существующую — это часто бывает полезно. Ты уже наверняка догадался, как запретить другим игрокам проводить матчи с участием своей прошивки — нужно лишь убрать галочку «Доступна для сражения».
  %h3 Но как опробовать прошивку, не проводя ни с кем матч?
  Ты можешь просто провести матч сам с собой. У тебя всегда есть ещё один вебобот, так что ты можешь загрузить в обоих свои прошивки (или даже одну и ту же), и отправить на бой друг против друга. Эксперементируй сколько угодно — в игре против самого себя никто не побеждает и не проигрывает, так что это никак не отразится на твоём рейтинге.
  %h3 Я уже начинаю догадываться, что мне нужна ссылка «Матчи»?
  Верно, по этой ссылке ты всегда сможешь найти последние матчи, в которых участвовал твой вебобот, там же находится ссылка «Провести матч», нажав на которую тебе предложат выбрать противника, а также выбрать, какую именно из своих прошивок ты хочешь загрузить в вебобота. Но можно сделать немного по-другому. Зайди на страницу прошивки, с которой ты хочешь сразиться — в данном случае, на страницу своей прошивки. Видишь ссылку «Сразиться»? Нажав на неё, ты попадёшь в меню проведения матча, про которое было сказано выше, но на этот раз тебе не надо будет искать нужную тебе прошивку в списке противников: она будет уже выбрана. Тебе останется выбрать вторую, свою прошивку — тут уже не нужно долго думать — и нажать "Провести".
  %h3 Ой, всё зависло!
  «Спокойствие, только спокойствие!» © Требуется некоторое время, чтобы наш сервер просчитал матч, так что можешь просто расслабиться секунд на 15, посмотреть в окно... Вот и всё! На странице матча отображается вся информация о его результате, но сейчас тебе гораздо интереснее посмотреть на вебоботов в действии, чем на сухие цифры, не так ли? Скорее нажимай «Повтор матча»!
  %h3 Круто! Но они так глупо врезаются в стены, с этим можно что-то поделать?
  Естественно! Конструкция вебобота практически идеальна и предусматривает это, так что всё что тебе нужно — это улучшить прошивку. Возвращайся на страницу редактирования своей прошивки. Стирай то, что ты ввёл в поле «Исходный код», и пиши туда следующее:
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:sample_program]}
  Давай разберёмся, что означает каждая строчка.
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:first_line]}
  — ты уже знаешь, что это значит. По сравнению с прошлым разом изменилось значение скорости со 100 до 50, потому что на очень большой скорости робот не может поворачивать.
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:while]}
  — эта конструкция называется <i>цикл</i>, потому что всё, что ты напишешь на месте многоточия, будет исполняться циклически несколько раз. Слово 
  .inline_code while
  по-английски означает «до тех пор, пока», поэтому выполнение будет продолжаться до тех пор, пока верно условие, написанное после слова <div class='inline_code'>while</div>. В этом примере после 
  .inline_code while
  стоит единица. А так как любое число кроме нуля обозначает истину, то этот цикл будет выполняться вечно — пока не закончится матч. Слово 
  .inline_code end
  означает «конец», этим словом заканчивается список инструкций, которые должны быть повторены.
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:posx]}
  — здесь ты видишь в одной строчке объявление переменной и вызов функции. Понимать это нужно так: происходит вызов функции posx без агрументов (пустые скобки), а возвращаемое значение записывается в переменную <div class='inline_code'>x</div>. Функция 
  .inline_code posx
  — это одна из стандартных функций, отвечающих за взаимодействие с окружающим миром: она возвращает координату 
  .inline_code x
  текущей позиции вебобота (<div class='inline_code'>pos</div> от слова <i>position</i> — позиция, местоположение). Картинка ниже объясняет, как расположены координатные оси и как определяются координаты:
  .illustration
    = image_tag "coordinates.png", :alt => 'Иллюстрация: координаты'
  Следующая строчка аналогична этой, а вызываемая там функция 
  .inline_code posy
  аналогична функции <div class='inline_code'>posx</div>, только возвращает <div class='inline_code'>y</div>-координату текущей позиции. Движемся дальше.
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:if]}
  — эта конструкция называется условной, потому что содержащиеся в ней инструкции выполняются только если верно указанное условие. Слово 
  .inline_code if
  так и переводится - «если», а условие пишется после него.
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:rotate]}
  — как ты наверняка уже понимаешь, здесь происходит вызов функции 
  .inline_code rotate
  с передачей ей параметра 45. В переводе 
  .inline_code rotate
  означает «повернуть(ся)», так что в этой строчке мы приказываем роботу повернуться под углом 45 градусов к оси 
  .inline_code x
  — картинка пояснит сказанное:
  .illustration
    = image_tag "angles.png", :alt => 'Иллюстрация: углы'
  Осталось разобраться с самой смешной строчкой:
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:log]}
  — она совсем не влияет на поведение вебобота, но иногда бывает крайне полезна. Она печатает в лог (говоря по русски — в бортовой журнал) всё, что через запятую указано после слова <div class='inline_code'>@log</div>: строчки текста, значения переменных и любых выражений, например:
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:logging_example]}
  Это бывает полезно для отладки программы, то есть для поиска и устранения ошибок. Помещая печать в лог в определенное место программы, можно убедиться, что исполнение вообще попадает туда, а печатая значения переменных — пристально посмотреть на них, и выяснить, нет ли ошибки в производимых тобой расчетах.
  %br
  %br
  Итак, по частям всё ясно. Общий же смысл программы такой: мы устанавливаем роботу скорость, на которой он способен поворачиваться, после чего в цикле постоянно проверяем, не приблизился ли он к какой-либо стенке ближе чем на 100 сантиметров. Если это произошло, робот поворачивается в сторону от этой стены, что-то печатая при этом в лог.
  %h3 Та-ак, а теперь я могу сохранить прошивку и снова провести матч сам с собой?
  Безусловно, но прежде чем сохранять, задержись на этой странице ещё на секунду. Сейчас ты узнаешь смысл текстового поля «Комментарий к версии». Дело в том, что, сколько бы ты не изменял свою прошивку, все её версии сохраняются на сайте. Сделано это для того, чтобы проделанная тобой работа не оказалась потеряна: если ты вдруг что-то поменяешь, а потом поймёшь, что сделал это зря, ты всегда сможешь вернуться к старой версии — для этого достаточно нажать ссылку «История версий» на странице прошивки. Но когда прошивка прожила уже долгую жизнь, и было внесено много правок, становится трудно ориентироваться в огромном числе версий. Чтобы как-то структурировать этот огромный список, ты можешь к каждой версии (или к некоторым из них, самым важным) прикрепить краткое описание изменений, которые ты сделал. Сейчас ты мог бы написать туда «Добавил проверку на столкновения со стенками», но если не хочешь — не надо. Не забудь сохранить прошивку кнопкой в конце страницы — и вперёд, проводить матч! Стало лучше, не так ли?
  %h3 Всё это круто, но я хочу скорей научиться стрелять!
  Разумное желание. Ты, видимо, не будешь сильно удивлён тому, что для этого существует специальная функция, и называется она <div class='inline_code'>fire</div>. Попробуй теперь сам обратиться к
  = link_to "руководству по стандартным функциям", runtime_library_doc_path
  и понять, как ей пользоваться. Тебе пригодятся также функции <div class='inline_code'>enemy_posx</div>, 
  .inline_code enemy_posy
  для определения позиции противника, 
  .inline_code atan2
  для получения угла по заданным координатным смещениям.
  %h3 Хорошо, займусь этим на досуге... А для чего нужны оставшиеся разделы сайта: «Пользователи», «Комментарии» и «Рейтинг»?
  Название первого, как, впрочем, и остальных, говорит само за себя — по этой ссылке ты найдёшь список всех пользователей. Ты можешь заходить на страничку каждого из них, смотреть, какие у них есть прошивки, и сражаться с ними.
  %br
  %br
  Про комментарии чуть подробнее. Ты можешь оставлять комментарии к прошивкам, матчам и пользователям, используя ссылку «Написать» в разделе «Комментарии» внизу страницы. Ссылка же вверху страницы ведёт на полный список комментариев.
  %br
  %br
  Рейтинг показывает, кто из игроков преуспел лучше других. Очки рейтинга пользователя складываются из очков его прошивок. В свою очередь прошивки получают очки за победы в матчах, причём сумма получаемых очков зависит от рейтинга противника. Если менее «крутая», победила более «крутую», то это считается почётным и победившая получает существенную прибавку к своим очкам. В противном случае победитель получает мало — нет ничего почётного в том, чтобы обижать слабых. По ссылке «Рейтинг» вверху страницы ты обнаружишь рейтинг пользователей — таблицу, где показано количество очков, набранных каждым пользователем, и его место, которое он занимает в рейтинге. Начинай побеждать, и поднимайся до самого верха. Удачи!

