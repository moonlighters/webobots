- title "Стандартные функции и константы"

- actions_for_doc

.docs
  Во время исполнения прошивки можно взаимодействовать с внешним миром посредством
  вызова стандартных функций и использования значения предопределенных переменных.

  %h3 Единицы измерения
  %ul
    %li углы отсчитываются в градусах от оси X к оси Y;
    %li единица времени — 1 с;
    %li единица расстояния — 1 см;
    %li единица скорости — 1 см/с.

  %h3 Предопределенные переменные
  Игровой мир, в котором происходят сражения ботов, обладает следующими параметрами:

  %ul
    %li <div class='inline_code'>FIELD_SIZE</div>: поле имеет размеры 1000x1000 см;
    %li <div class='inline_code'>MAX_SPEED</div>: ограничена максимальная скорость — 100 см/с;
    %li <div class='inline_code'>MAX_HEALTH</div>: здоровье бота изменяется от 0 до 100;
    %li <div class='inline_code'>ACCELERATION</div> и <div class='inline_code'>DECELERATION</div>: разгон и торможение происходят с фиксированными ускорениями (15 см/с<sup>2</sup> и 30 см/с<sup>2</sup> соответственно);
    %li <div class='inline_code'>RATE_OF_FIRE</div>: ограничена маскимальная скорострельность — 1.5 выстрела/с;
    %li <div class='inline_code'>MAX_SPEED_WHEN_ROTATION_POSSIBLE</div>: поворот бота возможен на любой угол, если скорость меньше определенной (50 м/с), иначе поворот невозможен;
    %li <div class='inline_code'>MAX_LIFE_TIME</div>: ограничена максимальная продолжительность матча — 60 с;
    %li <div class='inline_code'>BOT_RADIUS</div>: бот является кругом радиуса 30 см;
    %li <div class='inline_code'>MISSILE_SPEED</div>: скорость ракеты 200 м/с;
    %li <div class='inline_code'>EXPLOSION_RADIUS</div>: радиус взрыва ракеты 50 см;
    %li <div class='inline_code'>MISSILE_DAMAGE</div>: максимальный урон от ракеты 10 (при непосредственном столкновении), линейно падает до 0 с увеличением расстояния от ракеты до поверхности бота.

  Более того, не рекомендуется писать значения этих величин в коде, 
  так как они могут изменяться в новых версиях виртуальной машины.
  Вместо этого лучше использовать перечисленные переменные.
  = render :partial => 'firmwares/code', :locals => {:code => @samples[:constants]};

  %h3 Функции
  Далее приведен список всех предопределенных функций для взаимодействия с
  игровым миром. Эти функции на момент начала исполнения прошивки уже
  объявлены и доступны для вызова.

  %h4 posx()
  Возвращает координату
  .inline_code x
  бота. Иллюстрация поясняет, как отсчитываются координаты
  .illustration
    = image_tag "coordinates.png", :alt => 'Иллюстрация: координаты'

  %h4 posy()
  Возвращает координату
  .inline_code y
  бота.

  %h4 angle()
  Возвращает направление движения бота.

  %h4 speed()
  Возвращает текущую скорость бота.

  %h4 desired_speed()
  Возвращает скорость, установленную функцией <div class='inline_code'>set_speed</div>. Она может быть
  не равна текущей скорости, так как ускорение происходит не моментально.

  %h4 health()
  Возвращает здоровье бота.

  %h4 time()
  Возвращает время прошедшее с начала матча.

  %h4 rotate(angle)
  Устанавливает направление движения бота, если
  скорость допустима для поворота. Иллюстрация поясняет, как отсчитываются углы:
  .illustration
    = image_tag "angles.png", :alt => 'Иллюстрация: углы'

  Возвращает 1, если поворот возможен, 0 — иначе.

  %h4 set_speed(speed)
  Устанавливает скорость, до который бот начнет
  ускоряться или тормозить.

  Возвращает 1, если скорость не выходит за допустимые пределы,
  0 — иначе.

  %h4 sleep(time)
  Бот «засыпает» на 
  .inline_code time
  секунд: исполнение прошивки приостанавливается,
  при этом движение не прекращается.

  Возвращает <div class='inline_code'>time</div>.

  %h4 enemy_posx()
  Возвращает координату
  .inline_code x
  бота-врага.

  %h4 enemy_posy()
  Возвращает координату
  .inline_code y
  бота-врага.

  %h4 fire(angle, distance)
  Выпускает ракету в направлении угла <div class='inline_code'>angle</div>,
  которая взрывается либо на расстоянии <div class='inline_code'>distance</div>, либо
  от прямого столкновения с вражеским ботом.

  Возвращает 1, если выстрел прошел успешно,
  0, если выстрел невозможен из-за ограничения скорострельности.

  %h4 sin(angle)
  Вычисляет синус угла, данного в градусах.

  %h4 cos(angle)
  Вычисляет косинус угла, данного в градусах.

  %h4 atan2(y,x)
  Вычисляет арктангес <div class='inline_code'>y/x</div>, то есть угол прямоугольного треугольника
  с катетами 
  .inline_code y
  и <div class='inline_code'>x</div>.

  Результат лежит в <div class='inline_code'>-180..180</div>.

  %h4 sqr(x)
  Вычисляет квадрат аргумента.

  %h4 sqrt(x)
  Вычисляет квадратный корень из аргумента.

  Необходимо проверять значение 
  .inline_code x
  перед вызовом функции: если оно
  отрицательно, это приведёт к ошибке исполнения.

  %h4 rand()
  Возвращает случайное число от 0 до 1.
